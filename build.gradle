buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://jitpack.io" }
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "org.asciidoctor:asciidoctor-gradle-plugin:1.5.3"
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.asciidoctor.convert'

sourceCompatibility = 1.8

repositories {
	mavenCentral()
    jcenter()
	maven { url = "https://jitpack.io" }
	mavenLocal()
}

ext {
	snippetsDir = file('build/generated-snippets')
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	runtime('com.h2database:h2')
	compileOnly('org.projectlombok:lombok:1.16.20') // see https://github.com/rzwitserloot/lombok/issues/1716
	testCompileOnly('org.projectlombok:lombok:1.16.20')
	testCompile('org.junit.jupiter:junit-jupiter-engine:5.2.0')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')

	testCompile('com.google.guava:guava:23.0')

	asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor"
}

tasks.withType(Test.class) {
	useJUnitPlatform()
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}
